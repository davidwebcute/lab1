{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard.service.ts","webpack:///./src/app/authentication.service.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/taxcalcrecord-create/taxcalcrecord-create.component.css","webpack:///./src/app/taxcalcrecord-create/taxcalcrecord-create.component.html","webpack:///./src/app/taxcalcrecord-create/taxcalcrecord-create.component.ts","webpack:///./src/app/taxcalcrecord-detail/taxcalcrecord-detail.component.css","webpack:///./src/app/taxcalcrecord-detail/taxcalcrecord-detail.component.html","webpack:///./src/app/taxcalcrecord-detail/taxcalcrecord-detail.component.ts","webpack:///./src/app/taxcalcrecord/taxcalcrecord.component.css","webpack:///./src/app/taxcalcrecord/taxcalcrecord.component.html","webpack:///./src/app/taxcalcrecord/taxcalcrecord.component.ts","webpack:///./src/app/taxcalculate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container\\\">\\n      <div id=\\\"navbar-main\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li><a routerLink=\\\"/\\\">Home</a></li>\\n        </ul>\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <li *ngIf=\\\"!auth.isLoggedIn()\\\"><a routerLink=\\\"/login\\\">Sign in</a></li>\\n          <li *ngIf=\\\"auth.isLoggedIn()\\\"><a routerLink=\\\"/profile\\\">{{ auth.getUserDetails()?.name }}</a></li>\\n          <li *ngIf=\\\"auth.isLoggedIn()\\\"><a (click)=\\\"auth.logout()\\\">Logout</a></li>\\n          <li *ngIf=\\\"auth.isLoggedIn()\\\"><a routerLink=\\\"/taxcalcrecords\\\">My tax calculations</a></li>\\n          <li *ngIf=\\\"auth.isLoggedIn()\\\"><a routerLink=\\\"/taxcalcrecord-create\\\">Calculate tax again</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\nimport { AuthenticationService } from './authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(public auth: AuthenticationService) {}\n\n  title = 'TaxCalculator';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ProfileComponent } from './profile/profile.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthenticationService } from './authentication.service';\nimport { AuthGuardService } from './auth-guard.service';\nimport { TaxcalculateService } from './taxcalculate.service';\n\nimport { TaxcalcrecordComponent } from './taxcalcrecord/taxcalcrecord.component';\nimport { TaxcalcrecordDetailComponent } from './taxcalcrecord-detail/taxcalcrecord-detail.component';\nimport { TaxcalcrecordCreateComponent } from './taxcalcrecord-create/taxcalcrecord-create.component';\n\nconst appRoutes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuardService] },\n  {\n    path: 'taxcalcrecords',\n    component: TaxcalcrecordComponent,\n    data: { title: 'Taxc calc record List' }\n  },\n  {\n    path: 'taxcalcrecord-details/:id',\n    component: TaxcalcrecordDetailComponent,\n    data: { title: 'Tax calc record Details' }\n  },\n  {\n    path: 'taxcalcrecord-create',\n    component: TaxcalcrecordCreateComponent,\n    data: { title: 'Create Tax calc record' }\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProfileComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    TaxcalcrecordComponent,\n    TaxcalcrecordDetailComponent,\n\t  TaxcalcrecordCreateComponent\n  ],\n  imports: [\n    BrowserModule,\n\tFormsModule,\n    HttpClientModule,\n\t  RouterModule.forRoot(\n        appRoutes,\n        { enableTracing: true } // <-- debugging purposes only\n    )\n  ],\n  providers: [\n    AuthenticationService, \n    AuthGuardService,\n    TaxcalculateService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private auth: AuthenticationService, private router: Router) {}\n\n  canActivate() {\n    if (!this.auth.isLoggedIn()) {\n      this.router.navigateByUrl('/');\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators/map';\nimport { Router } from '@angular/router';\n\nexport interface UserDetails {\n  _id: string;\n  email: string;\n  name: string;\n  exp: number;\n  iat: number;\n}\n\ninterface TokenResponse {\n  token: string;\n}\n\nexport interface TokenPayload {\n  email: string;\n  password: string;\n  name?: string;\n}\n\n@Injectable()\nexport class AuthenticationService {\n  private token: string;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  private saveToken(token: string): void {\n    localStorage.setItem('taxcalc-token', token);\n    this.token = token;\n  }\n\n  public getToken(): string {\n    if (!this.token) {\n      this.token = localStorage.getItem('taxcalc-token');\n    }\n    return this.token;\n  }\n\n  public getUserDetails(): UserDetails {\n    const token = this.getToken();\n    let payload;\n    if (token) {\n      payload = token.split('.')[1];\n      payload = window.atob(payload);\n      return JSON.parse(payload);\n    } else {\n      return null;\n    }\n  }\n\n  public isLoggedIn(): boolean {\n    const user = this.getUserDetails();\n    if (user) {\n      return user.exp > Date.now() / 1000;\n    } else {\n      return false;\n    }\n  }\n\n  private request(method: 'post'|'get', type: 'login'|'register'|'profile', user?: TokenPayload): Observable<any> {\n    let base;\n\n    if (method === 'post') {\n      base = this.http.post(`/api/${type}`, user);\n    } else {\n      base = this.http.get(`/api/${type}`, { headers: { Authorization: `Bearer ${this.getToken()}` }});\n    }\n\n    const request = base.pipe(\n      map((data: TokenResponse) => {\n        if (data.token) {\n          this.saveToken(data.token);\n        }\n        return data;\n      })\n    );\n\n    return request;\n  }\n\n  public register(user: TokenPayload): Observable<any> {\n    return this.request('post', 'register', user);\n  }\n\n  public login(user: TokenPayload): Observable<any> {\n    return this.request('post', 'login', user);\n  }\n\n  public profile(): Observable<any> {\n    return this.request('get', 'profile');\n  }\n\n  public logout(): void {\n    this.token = '';\n    window.localStorage.removeItem('taxcalc-token');\n    this.router.navigateByUrl('/');\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  \\n  <h1>Hello there, welcome to use tax calclator!</h1>\\n\\n  <p *ngIf=\\\"!auth.isLoggedIn()\\\" >Won't you please <a routerLink=\\\"/login\\\">sign in</a> or <a routerLink=\\\"/register\\\">register</a>?</p>\\n  \\n  <p *ngIf=\\\"auth.isLoggedIn()\\\" ><a routerLink=\\\"/taxcalcrecord-create\\\">Calculate tax</a></p>\\n   \\n</div>\"","import { Component } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthenticationService } from '../authentication.service';\n\n@Component({\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent {\n  constructor(public auth: AuthenticationService) {}\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <h1 class=\\\"form-signin-heading\\\">Sign in</h1>\\n      <p class=\\\"lead\\\">Do dot have an account? Please <a routerLink=\\\"/register\\\">register</a> instead.</p>\\n      <form (submit)=\\\"login()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email address</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Enter email\\\" [(ngModel)]=\\\"credentials.email\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"credentials.password\\\">\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Sign in</button>\\n      </form>\\n\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n  credentials: TokenPayload = {\n    email: '',\n    password: ''\n  };\n\n  constructor(private auth: AuthenticationService, private router: Router) {}\n\n  login() {\n    this.auth.login(this.credentials).subscribe(() => {\n      this.router.navigateByUrl('/profile');\n    }, (err) => {\n      console.error(err);\n    }); \n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n     <div class=\\\"col-md-6\\\">\\n      <h1>Your profile</h1>\\n      <div class=\\\"form-horizontal\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-3 control-label\\\">Your Full name</label>\\n          <p class=\\\"form-control-static\\\">{{ details?.name }}</p>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-3 control-label\\\">Your Email</label>\\n          <p class=\\\"form-control-static\\\">{{ details?.email }}</p>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthenticationService, UserDetails } from '../authentication.service';\n\n@Component({\n  templateUrl: './profile.component.html'\n})\nexport class ProfileComponent {\n  details: UserDetails;\n\n  constructor(private auth: AuthenticationService) {}\n  \n  ngOnInit() {    \n    this.auth.profile().subscribe(user => {\n      this.details = user;\n    }, (err) => {\n      console.error(err);\n    });\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <h1>Register</h1>\\n      <p class=\\\"lead\\\">Already have an account? Please <a routerLink=\\\"/login\\\">log in</a> instead.</p>\\n      <form (submit)=\\\"register()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Full name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Enter your name\\\" [(ngModel)]=\\\"credentials.name\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email address</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Enter email\\\" [(ngModel)]=\\\"credentials.email\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"credentials.password\\\">\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Register</button>\\n      </form>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent {\n  credentials: TokenPayload = {\n    email: '',\n    name: '',\n    password: ''\n  };\n\n  constructor(private auth: AuthenticationService, private router: Router) {}\n\n  register() {\n    this.auth.register(this.credentials).subscribe(() => {\n      this.router.navigateByUrl('/profile');\n    }, (err) => {\n      console.error(err);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Calculate Tax</h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <form (ngSubmit)=\\\"calSaveTaxcalcrecord()\\\" #taxcalcrecordForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"user_email\\\">User Email</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"record.user_email\\\" name=\\\"user_email\\\" [readonly]=\\\"true\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"financial_year\\\">FY Year</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"record.financial_year\\\" name=\\\"financial_year\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"annual_income\\\">Annual Income</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"record.annual_income\\\" name=\\\"annual_income\\\" required>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"super_rate\\\">Super rate(eg: 0.095, 9.5%)</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"record.super_rate\\\" name=\\\"super_rate\\\" required>\\n        </div>\\n        \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"is_include_super\\\">Is super included</label>\\n          <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"record.is_include_super\\\" name=\\\"is_include_super\\\" >\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"superannuation\\\">Superannuation</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [ngModel]=\\\"record.superannuation\\\" [readonly]=\\\"true\\\" name=\\\"superannuation\\\" >\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"gross_amount\\\">Gross amount</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [ngModel]=\\\"record.gross_amount\\\" [readonly]=\\\"true\\\" name=\\\"gross_amount\\\" >\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"gross_super_amount\\\">Gross amount(Inc. Super)</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [ngModel]=\\\"record.gross_super_amount\\\" [readonly]=\\\"true\\\" name=\\\"gross_super_amount\\\" >\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"tax_amount\\\">Tax amount</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [ngModel]=\\\"record.tax_amount\\\" [readonly]=\\\"true\\\" name=\\\"tax_amount\\\" >\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"net_amount\\\">Net amount</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [ngModel]=\\\"record.net_amount\\\" [readonly]=\\\"true\\\" name=\\\"net_amount\\\" >\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"net_super_amount\\\">Net amount(Inc. Super)</label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [ngModel]=\\\"record.net_super_amount\\\" [readonly]=\\\"true\\\" name=\\\"net_super_amount\\\" >\\n        </div>\\n       \\n\\n        <div class=\\\"form-group\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!taxcalcrecordForm.form.valid\\\">Calculate & Save</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { element } from 'protractor';\nimport { debug } from 'util';\nimport { AuthenticationService } from '../authentication.service';\nimport { TaxcalculateService } from '../taxcalculate.service';\nimport { Observable, Subject, ReplaySubject, from, of, range } from 'rxjs';\nimport { map, filter, switchMap } from 'rxjs/operators';\nimport { debounce } from 'rxjs/internal/operators/debounce';\n\n\n@Component({\n  selector: 'app-taxcalcrecord-create',\n  templateUrl: './taxcalcrecord-create.component.html',\n  styleUrls: ['./taxcalcrecord-create.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TaxcalcrecordCreateComponent implements OnInit {\n\n  record = { 'financial_year': 2018 };\n\n  constructor(private http: HttpClient, private router: Router, private auth: AuthenticationService, private taxCalService: TaxcalculateService) { }\n\n  ngOnInit() {\n    let email = this.auth.getUserDetails().email;\n    this.record['user_email'] = email;\n  }\n\n  calSaveTaxcalcrecord() {\n\n    this.calTax();\n    this.saveTaxcalcrecord();\n  }\n\n  saveTaxcalcrecord() {\n\n    this.taxCalService.saveTaxcalcrecords(this.record)\n      .subscribe(res => {\n        let id = res['_id'];\n        //this.router.navigate(['/taxcalcrecord-details', id]);\n      }, (err) => {\n        console.log(err);\n      }\n      );\n  }\n\n  calTax() {\n\n    let tRateObj = this.taxCalService.getTaxRateMeta(this.record['financial_year']);\n\n    if(tRateObj == undefined || tRateObj == null)\n    {\n        return;\n    }\n    \n    if (this.record['is_include_super']) {\n      this.record['superannuation'] = this.record['super_rate'] * this.record['annual_income'];\n      this.record['gross_amount'] = this.record['annual_income'] - this.record['superannuation'];\n    }\n    else {\n      this.record['superannuation'] = this.record['super_rate'] * this.record['annual_income'];\n      this.record['gross_amount'] = this.record['annual_income'];\n    }\n\n    this.record['gross_super_amount'] = this.record['gross_amount'] * 1 + this.record['superannuation'];\n\n    let taxableIncome = this.record['gross_amount'];\n    let baseSubTotalTax = 0;\n    let taxRateItemProjected = null;\n\n    let txRates = tRateObj['txRates'].filter(rateInfo => taxableIncome <= rateInfo['max']);\n    if(txRates.length > 0){ taxRateItemProjected = txRates[0];}\n\n    if (taxRateItemProjected != null) {\n      this.record['tax_amount'] = taxRateItemProjected.baseSubTotalTax + (taxableIncome - taxRateItemProjected.min) * taxRateItemProjected.rate;\n      this.record['net_amount'] = taxableIncome - this.record['tax_amount'];\n      this.record['net_super_amount'] = this.record['net_amount'] + this.record['superannuation'];\n\n    }\n\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>{{ record.user_email }}</h1>\\n  <dl class=\\\"list\\\">\\n  \\n    <dt>FY Year</dt>\\n    <dd>{{ record.financial_year }}</dd>\\n    <dt>Annual Income</dt>\\n    <dd>{{ record.annual_income }}</dd>\\n    <dt>Super rate</dt>\\n    <dd>{{ record.super_rate }}</dd>\\n    <dt>Is super included</dt>\\n    <dd>{{ record.is_include_super }}</dd>\\n    <dt>Superannuation</dt>\\n    <dd>{{ record.superannuation }}</dd>\\n\\t\\n\\t<dt>Gross amount</dt>\\n    <dd>{{ record.gross_amount }}</dd>\\n    <dt>Gross amount(Inc. Super)</dt>\\n    <dd>{{ record.gross_super_amount }}</dd>\\n    <dt>Tax amount</dt>\\n    <dd>{{ record.tax_amount }}</dd>\\n    <dt>Net amount</dt>\\n    <dd>{{ record.net_amount }}</dd>\\n    <dt>Net amount(Inc. Super)</dt>\\n    <dd>{{ record.net_super_amount }}</dd>\\n\\t<dt>Created date</dt>\\n    <dd>{{ record.created_date }}</dd>\\n\\n  </dl>\\n</div>\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { TaxcalculateService } from '../taxcalculate.service';\n\n@Component({\n  selector: 'app-taxcalcrecord-detail',\n  templateUrl: './taxcalcrecord-detail.component.html',\n  styleUrls: ['./taxcalcrecord-detail.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TaxcalcrecordDetailComponent implements OnInit {\n\n  record = {};\n\n  constructor(private route: ActivatedRoute, private http: HttpClient, private taxCalService : TaxcalculateService) { }\n\n  ngOnInit() {\n    this.getTaxcalcrecordDetail(this.route.snapshot.params['id']);\n  }\n\n  getTaxcalcrecordDetail(id) {\n    // this.http.get('/api/taxcalcrecord/'+id).subscribe(data => {\n    //   this.record = data;\n    // });\n    this.taxCalService.getTaxcalcrecordDetail(id).subscribe(data => {\n      this.record = data;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Tax Calculation Record List\\n    <a [routerLink]=\\\"['/taxcalcrecord-create']\\\" class=\\\"btn btn-default btn-lg\\\">\\n      <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\">+</span>\\n    </a>\\n  </h1>\\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th>FY Year</th>\\n        <th>Annual Income</th>\\n        <th>Super rate</th>\\n        <th>Tax amount</th>\\n        <th>Created date</th>\\n        <th>Action</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let record of taxCalcRecords\\\">\\n        <td>{{ record.financial_year }}</td>\\n        <td>{{ record.annual_income }}</td>\\n        <td>{{ record.super_rate }}</td>\\n        <td>{{ record.tax_amount }}</td>\\n        <td>{{ record.created_date }}</td>\\n        <td>\\n          <a [routerLink]=\\\"['/taxcalcrecord-details',record._id]\\\" class=\\\"btn btn-default btn-lg\\\">\\n            <span class=\\\"glyphicon glyphicons-note\\\" aria-hidden=\\\"true\\\">Details</span>\\n          </a>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthenticationService } from '../authentication.service';\nimport { TaxcalculateService } from '../taxcalculate.service';\n\n@Component({\n  selector: 'app-taxcalcrecord',\n  templateUrl: './taxcalcrecord.component.html',\n  styleUrls: ['./taxcalcrecord.component.css']\n})\nexport class TaxcalcrecordComponent implements OnInit {\n\n  taxCalcRecords: any;\n  \n  constructor(private http: HttpClient, private auth: AuthenticationService, private taxCalService : TaxcalculateService) { }\n\n  ngOnInit() {\n\t  // this.http.get('/api/taxcalcrecords').subscribe(data => {\n    //   this.taxCalcRecords = data;\n    // });\n    let email = this.auth.getUserDetails().email;\n    this.taxCalService.getTaxcalcrecordsByEmail(email).subscribe(data => {\n      this.taxCalcRecords = data;\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators/map';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable()\nexport class TaxcalculateService {\n\n  constructor(private http: HttpClient, private router: Router, private authService: AuthenticationService) {\n\n  }\n\n  public getTaxcalcrecordsByEmail(email): Observable<any> {\n    return this.http.get('/api/taxcalcrecordsbyemail/' + email, { headers: { Authorization: `Bearer ${this.authService.getToken()}` } });\n  }\n\n  public getTaxcalcrecords(): Observable<any> {\n    return this.http.get('/api/taxcalcrecords', { headers: { Authorization: `Bearer ${this.authService.getToken()}` } });\n  }\n\n  public saveTaxcalcrecords(record): Observable<any> {\n    return this.http.post('/api/taxcalcrecord', record, { headers: { Authorization: `Bearer ${this.authService.getToken()}` } });\n  }\n\n  public getTaxcalcrecordDetail(id): Observable<any> {\n    return this.http.get('/api/taxcalcrecord/' + id, { headers: { Authorization: `Bearer ${this.authService.getToken()}` } });\n  }\n\n  //TO be moved to separated service\n  public getTaxRateMeta(fyear) {\n    let txRateData = require('../../api/json_data/taxrates.json');\n    if (txRateData) {\n      let rds = txRateData.filter(rd => fyear == rd.fyear);\n      if(rds.length > 0){ return rds[0];}\n    }\n    return null;\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}